(()=>{"use strict";var __webpack_modules__={729:(__unused_webpack_module,exports)=>{eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.activate = activate;\n// 四元数转换函数\nfunction eulerToQuaternion(pitch, yaw, roll) {\n    let cy = Math.cos(yaw * 0.5);\n    let sy = Math.sin(yaw * 0.5);\n    let cr = Math.cos(roll * 0.5);\n    let sr = Math.sin(roll * 0.5);\n    let cp = Math.cos(pitch * 0.5);\n    let sp = Math.sin(pitch * 0.5);\n    let qx = cy * sr * cp - sy * cr * sp;\n    let qy = cy * cr * sp + sy * sr * cp;\n    let qz = sy * cr * cp - cy * sr * sp;\n    let qw = cy * cr * cp + sy * sr * sp;\n    return { x: qx, y: qy, z: qz, w: qw };\n}\n// 计算 yaw 角度：根据两个位置的夹角（1号装甲板与敌人中心）\nfunction calculateYaw(armor1, center) {\n    const dx = center.pose.position.x - armor1.pose.position.x;\n    const dy = center.pose.position.y - armor1.pose.position.y;\n    return Math.atan2(dy, dx);\n}\n// 转换 EnemyInfo 为 SceneUpdate\nfunction convertEnemyInfo(inputMessage) {\n    const { armor1, armor2, armor3, armor4, center } = inputMessage;\n    const yaw = calculateYaw(armor1, center);\n    const pitch = -75 * Math.PI / 180;\n    const orientation = eulerToQuaternion(pitch, yaw, 0);\n    const rectangle = {\n        pose: {\n            position: armor1.pose.position,\n            orientation: orientation,\n        },\n        size: { x: 0.125, y: 0.15, z: 0.05 },\n        color: { r: 1, g: 0, b: 0, a: 1 },\n    };\n    const spherePrimitive = (pose, isCenter) => ({\n        pose: {\n            position: pose.pose.position,\n            orientation: pose.pose.orientation || { x: 0, y: 0, z: 0, w: 1 },\n        },\n        size: { x: 0.1, y: 0.1, z: 0.1 },\n        color: isCenter ? { r: 0, g: 0, b: 1, a: 1 } : { r: 1, g: 0, b: 0, a: 1 },\n    });\n    const spherePrimitives = [\n        spherePrimitive(armor1, true),\n        spherePrimitive(armor2, false),\n        spherePrimitive(armor3, false),\n        spherePrimitive(armor4, false),\n        spherePrimitive(center, true),\n    ];\n    return {\n        deletions: [],\n        entities: [\n            {\n                id: "enemy-info",\n                timestamp: armor1.header.stamp,\n                frame_id: armor1.header.frame_id,\n                lifetime: { sec: 10, nsec: 0 },\n                frame_locked: false,\n                metadata: [],\n                arrows: [],\n                cubes: [rectangle],\n                spheres: spherePrimitives,\n                cylinders: [],\n                lines: [],\n                triangles: [],\n                texts: [],\n                models: [],\n            },\n        ],\n    };\n}\n// 转换 PoseArray 为 SceneUpdate\nfunction convertPoseArray(inputMessage) {\n    const spheres = inputMessage.poses.map((pose) => ({\n        pose: {\n            position: pose.position,\n            orientation: pose.orientation || { x: 0, y: 0, z: 0, w: 1 },\n        },\n        size: { x: 0.1, y: 0.1, z: 0.1 },\n        color: { r: 0, g: 1, b: 0, a: 1 }, // 绿色球体\n    }));\n    return {\n        deletions: [],\n        entities: [\n            {\n                id: "pose-array",\n                timestamp: inputMessage.header.stamp,\n                frame_id: inputMessage.header.frame_id,\n                lifetime: { sec: 10, nsec: 0 },\n                frame_locked: false,\n                metadata: [],\n                arrows: [],\n                cubes: [],\n                spheres: spheres,\n                cylinders: [],\n                lines: [],\n                triangles: [],\n                texts: [],\n                models: [],\n            },\n        ],\n    };\n}\nfunction activate(extensionContext) {\n    extensionContext.registerMessageConverter({\n        fromSchemaName: "robot_msgs/msg/EnemyInfo",\n        toSchemaName: "foxglove.SceneUpdate",\n        converter: convertEnemyInfo,\n    });\n    extensionContext.registerMessageConverter({\n        fromSchemaName: "geometry_msgs/msg/PoseArray",\n        toSchemaName: "foxglove.SceneUpdate",\n        converter: convertPoseArray,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzI5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSx5Q0FBeUM7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsZ0JBQWdCLDRCQUE0QjtBQUM1QyxpQkFBaUIsd0JBQXdCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELHdCQUF3QjtBQUM1RSxTQUFTO0FBQ1QsZ0JBQWdCLHdCQUF3QjtBQUN4Qyw0QkFBNEIseUJBQXlCLElBQUksd0JBQXdCO0FBQ2pGLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLGtCQUFrQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLHdCQUF3QjtBQUN2RSxTQUFTO0FBQ1QsZ0JBQWdCLHdCQUF3QjtBQUN4QyxpQkFBaUIsd0JBQXdCO0FBQ3pDLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixrQkFBa0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL01lc3NhZ2VDb252ZXJ0ZXIvLi9zcmMvaW5kZXgudHM/MzNiYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYWN0aXZhdGUgPSBhY3RpdmF0ZTtcbi8vIOWbm+WFg+aVsOi9rOaNouWHveaVsFxuZnVuY3Rpb24gZXVsZXJUb1F1YXRlcm5pb24ocGl0Y2gsIHlhdywgcm9sbCkge1xuICAgIGxldCBjeSA9IE1hdGguY29zKHlhdyAqIDAuNSk7XG4gICAgbGV0IHN5ID0gTWF0aC5zaW4oeWF3ICogMC41KTtcbiAgICBsZXQgY3IgPSBNYXRoLmNvcyhyb2xsICogMC41KTtcbiAgICBsZXQgc3IgPSBNYXRoLnNpbihyb2xsICogMC41KTtcbiAgICBsZXQgY3AgPSBNYXRoLmNvcyhwaXRjaCAqIDAuNSk7XG4gICAgbGV0IHNwID0gTWF0aC5zaW4ocGl0Y2ggKiAwLjUpO1xuICAgIGxldCBxeCA9IGN5ICogc3IgKiBjcCAtIHN5ICogY3IgKiBzcDtcbiAgICBsZXQgcXkgPSBjeSAqIGNyICogc3AgKyBzeSAqIHNyICogY3A7XG4gICAgbGV0IHF6ID0gc3kgKiBjciAqIGNwIC0gY3kgKiBzciAqIHNwO1xuICAgIGxldCBxdyA9IGN5ICogY3IgKiBjcCArIHN5ICogc3IgKiBzcDtcbiAgICByZXR1cm4geyB4OiBxeCwgeTogcXksIHo6IHF6LCB3OiBxdyB9O1xufVxuLy8g6K6h566XIHlhdyDop5LluqbvvJrmoLnmja7kuKTkuKrkvY3nva7nmoTlpLnop5LvvIgx5Y+36KOF55Sy5p2/5LiO5pWM5Lq65Lit5b+D77yJXG5mdW5jdGlvbiBjYWxjdWxhdGVZYXcoYXJtb3IxLCBjZW50ZXIpIHtcbiAgICBjb25zdCBkeCA9IGNlbnRlci5wb3NlLnBvc2l0aW9uLnggLSBhcm1vcjEucG9zZS5wb3NpdGlvbi54O1xuICAgIGNvbnN0IGR5ID0gY2VudGVyLnBvc2UucG9zaXRpb24ueSAtIGFybW9yMS5wb3NlLnBvc2l0aW9uLnk7XG4gICAgcmV0dXJuIE1hdGguYXRhbjIoZHksIGR4KTtcbn1cbi8vIOi9rOaNoiBFbmVteUluZm8g5Li6IFNjZW5lVXBkYXRlXG5mdW5jdGlvbiBjb252ZXJ0RW5lbXlJbmZvKGlucHV0TWVzc2FnZSkge1xuICAgIGNvbnN0IHsgYXJtb3IxLCBhcm1vcjIsIGFybW9yMywgYXJtb3I0LCBjZW50ZXIgfSA9IGlucHV0TWVzc2FnZTtcbiAgICBjb25zdCB5YXcgPSBjYWxjdWxhdGVZYXcoYXJtb3IxLCBjZW50ZXIpO1xuICAgIGNvbnN0IHBpdGNoID0gLTc1ICogTWF0aC5QSSAvIDE4MDtcbiAgICBjb25zdCBvcmllbnRhdGlvbiA9IGV1bGVyVG9RdWF0ZXJuaW9uKHBpdGNoLCB5YXcsIDApO1xuICAgIGNvbnN0IHJlY3RhbmdsZSA9IHtcbiAgICAgICAgcG9zZToge1xuICAgICAgICAgICAgcG9zaXRpb246IGFybW9yMS5wb3NlLnBvc2l0aW9uLFxuICAgICAgICAgICAgb3JpZW50YXRpb246IG9yaWVudGF0aW9uLFxuICAgICAgICB9LFxuICAgICAgICBzaXplOiB7IHg6IDAuMTI1LCB5OiAwLjE1LCB6OiAwLjA1IH0sXG4gICAgICAgIGNvbG9yOiB7IHI6IDEsIGc6IDAsIGI6IDAsIGE6IDEgfSxcbiAgICB9O1xuICAgIGNvbnN0IHNwaGVyZVByaW1pdGl2ZSA9IChwb3NlLCBpc0NlbnRlcikgPT4gKHtcbiAgICAgICAgcG9zZToge1xuICAgICAgICAgICAgcG9zaXRpb246IHBvc2UucG9zZS5wb3NpdGlvbixcbiAgICAgICAgICAgIG9yaWVudGF0aW9uOiBwb3NlLnBvc2Uub3JpZW50YXRpb24gfHwgeyB4OiAwLCB5OiAwLCB6OiAwLCB3OiAxIH0sXG4gICAgICAgIH0sXG4gICAgICAgIHNpemU6IHsgeDogMC4xLCB5OiAwLjEsIHo6IDAuMSB9LFxuICAgICAgICBjb2xvcjogaXNDZW50ZXIgPyB7IHI6IDAsIGc6IDAsIGI6IDEsIGE6IDEgfSA6IHsgcjogMSwgZzogMCwgYjogMCwgYTogMSB9LFxuICAgIH0pO1xuICAgIGNvbnN0IHNwaGVyZVByaW1pdGl2ZXMgPSBbXG4gICAgICAgIHNwaGVyZVByaW1pdGl2ZShhcm1vcjEsIHRydWUpLFxuICAgICAgICBzcGhlcmVQcmltaXRpdmUoYXJtb3IyLCBmYWxzZSksXG4gICAgICAgIHNwaGVyZVByaW1pdGl2ZShhcm1vcjMsIGZhbHNlKSxcbiAgICAgICAgc3BoZXJlUHJpbWl0aXZlKGFybW9yNCwgZmFsc2UpLFxuICAgICAgICBzcGhlcmVQcmltaXRpdmUoY2VudGVyLCB0cnVlKSxcbiAgICBdO1xuICAgIHJldHVybiB7XG4gICAgICAgIGRlbGV0aW9uczogW10sXG4gICAgICAgIGVudGl0aWVzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaWQ6IFwiZW5lbXktaW5mb1wiLFxuICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogYXJtb3IxLmhlYWRlci5zdGFtcCxcbiAgICAgICAgICAgICAgICBmcmFtZV9pZDogYXJtb3IxLmhlYWRlci5mcmFtZV9pZCxcbiAgICAgICAgICAgICAgICBsaWZldGltZTogeyBzZWM6IDEwLCBuc2VjOiAwIH0sXG4gICAgICAgICAgICAgICAgZnJhbWVfbG9ja2VkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBtZXRhZGF0YTogW10sXG4gICAgICAgICAgICAgICAgYXJyb3dzOiBbXSxcbiAgICAgICAgICAgICAgICBjdWJlczogW3JlY3RhbmdsZV0sXG4gICAgICAgICAgICAgICAgc3BoZXJlczogc3BoZXJlUHJpbWl0aXZlcyxcbiAgICAgICAgICAgICAgICBjeWxpbmRlcnM6IFtdLFxuICAgICAgICAgICAgICAgIGxpbmVzOiBbXSxcbiAgICAgICAgICAgICAgICB0cmlhbmdsZXM6IFtdLFxuICAgICAgICAgICAgICAgIHRleHRzOiBbXSxcbiAgICAgICAgICAgICAgICBtb2RlbHM6IFtdLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICB9O1xufVxuLy8g6L2s5o2iIFBvc2VBcnJheSDkuLogU2NlbmVVcGRhdGVcbmZ1bmN0aW9uIGNvbnZlcnRQb3NlQXJyYXkoaW5wdXRNZXNzYWdlKSB7XG4gICAgY29uc3Qgc3BoZXJlcyA9IGlucHV0TWVzc2FnZS5wb3Nlcy5tYXAoKHBvc2UpID0+ICh7XG4gICAgICAgIHBvc2U6IHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBwb3NlLnBvc2l0aW9uLFxuICAgICAgICAgICAgb3JpZW50YXRpb246IHBvc2Uub3JpZW50YXRpb24gfHwgeyB4OiAwLCB5OiAwLCB6OiAwLCB3OiAxIH0sXG4gICAgICAgIH0sXG4gICAgICAgIHNpemU6IHsgeDogMC4xLCB5OiAwLjEsIHo6IDAuMSB9LFxuICAgICAgICBjb2xvcjogeyByOiAwLCBnOiAxLCBiOiAwLCBhOiAxIH0sIC8vIOe7v+iJsueQg+S9k1xuICAgIH0pKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBkZWxldGlvbnM6IFtdLFxuICAgICAgICBlbnRpdGllczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGlkOiBcInBvc2UtYXJyYXlcIixcbiAgICAgICAgICAgICAgICB0aW1lc3RhbXA6IGlucHV0TWVzc2FnZS5oZWFkZXIuc3RhbXAsXG4gICAgICAgICAgICAgICAgZnJhbWVfaWQ6IGlucHV0TWVzc2FnZS5oZWFkZXIuZnJhbWVfaWQsXG4gICAgICAgICAgICAgICAgbGlmZXRpbWU6IHsgc2VjOiAxMCwgbnNlYzogMCB9LFxuICAgICAgICAgICAgICAgIGZyYW1lX2xvY2tlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgbWV0YWRhdGE6IFtdLFxuICAgICAgICAgICAgICAgIGFycm93czogW10sXG4gICAgICAgICAgICAgICAgY3ViZXM6IFtdLFxuICAgICAgICAgICAgICAgIHNwaGVyZXM6IHNwaGVyZXMsXG4gICAgICAgICAgICAgICAgY3lsaW5kZXJzOiBbXSxcbiAgICAgICAgICAgICAgICBsaW5lczogW10sXG4gICAgICAgICAgICAgICAgdHJpYW5nbGVzOiBbXSxcbiAgICAgICAgICAgICAgICB0ZXh0czogW10sXG4gICAgICAgICAgICAgICAgbW9kZWxzOiBbXSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgfTtcbn1cbmZ1bmN0aW9uIGFjdGl2YXRlKGV4dGVuc2lvbkNvbnRleHQpIHtcbiAgICBleHRlbnNpb25Db250ZXh0LnJlZ2lzdGVyTWVzc2FnZUNvbnZlcnRlcih7XG4gICAgICAgIGZyb21TY2hlbWFOYW1lOiBcInJvYm90X21zZ3MvbXNnL0VuZW15SW5mb1wiLFxuICAgICAgICB0b1NjaGVtYU5hbWU6IFwiZm94Z2xvdmUuU2NlbmVVcGRhdGVcIixcbiAgICAgICAgY29udmVydGVyOiBjb252ZXJ0RW5lbXlJbmZvLFxuICAgIH0pO1xuICAgIGV4dGVuc2lvbkNvbnRleHQucmVnaXN0ZXJNZXNzYWdlQ29udmVydGVyKHtcbiAgICAgICAgZnJvbVNjaGVtYU5hbWU6IFwiZ2VvbWV0cnlfbXNncy9tc2cvUG9zZUFycmF5XCIsXG4gICAgICAgIHRvU2NoZW1hTmFtZTogXCJmb3hnbG92ZS5TY2VuZVVwZGF0ZVwiLFxuICAgICAgICBjb252ZXJ0ZXI6IGNvbnZlcnRQb3NlQXJyYXksXG4gICAgfSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///729\n')}},__webpack_exports__={};__webpack_modules__[729](0,__webpack_exports__),module.exports=__webpack_exports__})();